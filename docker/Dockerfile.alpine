# Base stage - Use the erlang:26.2-alpine image, which is based on Alpine
FROM erlang:26.2-alpine AS builder

# Install necessary dependencies for building and packaging
RUN apk add --update --no-cache \
    git \
    build-base \
    coreutils \
    bsd-compat-headers \
    openssl-dev \
    snappy-dev \
    curl \
    alpine-sdk \
    bash \
    abuild \
    fakeroot \
    sudo

# Setup user and work directories for building the APK
RUN adduser -D -g "Alpine Package Builder" -u 10000 builder && \
    adduser builder abuild && \
    echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    mkdir -p /var/cache/distfiles /var/cache/apk /home/builder/packages && \
    chown -R builder:builder /var/cache/distfiles /var/cache/apk /home/builder/packages

USER builder
WORKDIR /home/builder

# Clone the repository and build the application
RUN git clone https://github.com/TheRainbowPhoenix/mqtt vernemq && \
    cd vernemq && \
    make VERBOSE=1 -j 16 rel || (echo "First attempt failed, trying again..." && make VERBOSE=1 -j 16 rel)

# Copy the configuration files to the correct locations
RUN mkdir -p /home/builder/apkbuild/vmq/usr/bin /home/builder/apkbuild/vmq/usr/lib/vmq/bin /home/builder/apkbuild/vmq/usr/lib/vmq/lib /home/builder/apkbuild/vmq/usr/lib/vmq/releases /home/builder/apkbuild/vmq/var/lib/vmq/data /home/builder/apkbuild/vmq/var/log/vmq /home/builder/apkbuild/vmq/etc/vmq /home/builder/apkbuild/vmq/usr/share/vmq \
    && cp vernemq/_build/default/rel/vernemq/bin/vernemq /home/builder/apkbuild/vmq/usr/bin/vmq \
    && cp vernemq/_build/default/rel/vernemq/bin/vmq-admin /home/builder/apkbuild/vmq/usr/bin/vmq-admin \
    && cp vernemq/_build/default/rel/vernemq/bin/vmq-passwd /home/builder/apkbuild/vmq/usr/bin/vmq-passwd \
    && cp vernemq/_build/default/rel/vernemq/bin/nodetool /home/builder/apkbuild/vmq/usr/bin/vmq-nodetool \
    && cp -r vernemq/_build/default/rel/vernemq/bin/* /home/builder/apkbuild/vmq/usr/lib/vmq/bin \
    && cp -r vernemq/_build/default/rel/vernemq/lib/* /home/builder/apkbuild/vmq/usr/lib/vmq/lib \
    && cp -r vernemq/_build/default/rel/vernemq/releases/* /home/builder/apkbuild/vmq/usr/lib/vmq/releases \
    && cp -r vernemq/_build/default/rel/vernemq/erts-* /home/builder/apkbuild/vmq/usr/lib/vmq \
    && cp -r vernemq/_build/default/rel/vernemq/etc/* /home/builder/apkbuild/vmq/etc/vmq \
    && cp -r vernemq/_build/default/rel/vernemq/data/* /home/builder/apkbuild/vmq/var/lib/vmq/data \
    && cp -r vernemq/_build/default/rel/vernemq/log/* /home/builder/apkbuild/vmq/var/log/vmq \
    && cp -r vernemq/_build/default/rel/vernemq/share/* /home/builder/apkbuild/vmq/usr/share/vmq \
    && mkdir -p /home/builder/apkbuild/vmq/var/run/vmq /home/builder/apkbuild/vmq/var/lib/vmq/configs /home/builder/apkbuild/vmq/usr/bin

RUN dos2unix /home/builder/apkbuild/vmq/usr/bin/vmq /home/builder/apkbuild/vmq/usr/bin/vmq-admin /home/builder/apkbuild/vmq/usr/lib/vmq/bin/vernemq

RUN cp vernemq/docker/bin/vm.args /home/builder/apkbuild/vmq/etc/vmq/vm.args && \
    cp vernemq/docker/base/vernemq.conf /home/builder/apkbuild/vmq/etc/vmq/conf.d/vernemq.conf && \
    mkdir -p /home/builder/apkbuild/vmq/var/log/vmq && \
    mkdir -p /home/builder/apkbuild/vmq/var/run/vmq && \
    mkdir -p /home/builder/apkbuild/vmq/var/lib/vmq/configs && \
    cp vernemq/docker/apk/APKBUILD /home/builder/apkbuild/APKBUILD

# Build the APK package
RUN mkdir -p /home/builder/apkbuild/pkg/vernemq && cd /home/builder/apkbuild && \
    abuild-keygen -a -i -n && \
    abuild -r

# Final stage - Create a clean image to extract the package
FROM alpine:3.20 AS final

# Copy the built package from the builder stage
COPY --from=builder /home/builder/packages/builder/x86_64/*.apk /packages/

# Set entrypoint
CMD ["cp", "/packages/*.apk", "/output/"]

