[Unit]
Description=VMQ Server
After=network.target
Wants=network.target

[Service]
User=vmq
Group=vmq

# The ExecStart= is foreground, so 'simple' here
Type=forking
PIDFile=/run/vmq/vmq.pid

NotifyAccess=all

# Give VMQ enough file descriptors
LimitNOFILE=1048576

Environment="WAIT_FOR_ERLANG=3600"
TimeoutStartSec=3600
RuntimeDirectory=vmq
WorkingDirectory=/usr/lib/vmq
ExecStartPre=/usr/bin/vmq chkconfig
ExecStart=/usr/bin/vmq start


# ExecStop is commented out so systemd will send a SIGTERM when 'systemctl stop'.
# SIGTERM is handled by VMQ and it then performs a graceful shutdown
# vmq stop will ping node, always return 0 to make sure next command will be executed
ExecStop=/bin/bash -c '/usr/bin/vmq stop; exit 0'
# If the process is still running, force kill it
ExecStop=/bin/bash -c 'if [ ps -p $MAINPID >/dev/null 2>&1 ]; then kill -15 $MAINPID; fi'

# Wait long enough before force kill for graceful shutdown
TimeoutStopSec=120s

Restart=on-failure

# Do not restart immediately so the peer nodes in the cluster have
# enough time to handle the 'DOWN' events of this node
RestartSec=120s

[Install]
WantedBy=multi-user.target
